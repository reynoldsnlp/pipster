[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


[project]
name = "pip_inside"
dynamic = ["version", "urls"]
description = "pip install from inside your scripts"
readme = "README.md"
authors = [
	{ name = "Robert Reynolds", email = "robert_reynolds@byu.edu" },
]
license = { file = "LICENSE" }
requires_python = ">=3.8"
dependencies = [
	"pip",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
]


[project.optional-dependencies]
test = [
  "pytest >=6.0",
]


[tool.cibuildwheel]
before-build = "python -m pip install --upgrade build hatch hatchling && python -m build --version && python -m hatch --version && python -c 'import hatchling.__about__ as a; print(a.__version__)'"
dependency-versions = "latest"
build-frontend = "build"  # instead of pip
test-command = "pytest {package}/tests"


[tool.hatch.version]
source = "vcs"


[tool.hatch.build.hooks.vcs]
version-file = "src/pip_inside/_version.py"


[tool.hatch.metadata.hooks.vcs.urls]
Homepage = "https://github.com/reynoldsnlp/pip_inside"
"Bug Tracker" = "https://github.com/reynoldsnlp/pip_inside/issues"
source_archive = "https://github.com/reynoldsnlp/pip_inside/archive/{commit_hash}.zip"


[tool.pytest]
python_files = "tests/functional/*.py"


[tool.pytest.ini_options]
minversion = "6.0"
pythonpath = [
  "src"
]
addopts = "-ra -q"
testpaths = [
    "tests",
]


